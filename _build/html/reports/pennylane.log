Traceback (most recent call last):
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/runner/work/qmlcourse/qmlcourse/.venv/lib/python3.8/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pennylane as qml
from pennylane import numpy as np
dev = qml.device('default.qubit', shots=1000, wires=2)
def make_entanglement():
    qml.Hadamard(wires=0)
    qml.CNOT(wires=[0, 1])
    return qml.probs(wires=[0, 1])

circuit = qml.QNode(make_entanglement, dev)
circuit()

–†–∞–±–æ—Ç–∞—è —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π PennyLane –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å `NumPy`, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º —Ç–∞–∫–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç <a href="https://github.com/HIPS/autograd">autograd</a>.
–ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –º—ã –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ `NumPy` –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º: `import numpy as np`, –∞ —Å–¥–µ–ª–∞–ª–∏ —ç—Ç–æ —Ç–∞–∫: `from pennylane import numpy as np`.

–í—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —É–∑–ª–æ–≤ -- —Å –ø–æ–º–æ—â—å—é –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ `QNode`. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–∞—á–∞–ª–µ –∫–æ–¥ —Ç–æ—Ç –∂–µ —Å–∞–º—ã–π:

```{code-cell} ipython3
@qml.qnode(dev)
def circuit():
    qml.Hadamard(wires=0)
    qml.CNOT(wires=[0, 1])
    return qml.probs(wires=[0, 1])

print(circuit())

–í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –≤–∑—è–ª–∏ –¥–≤—É—Ö–∫—É–±–∏—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏ —Å–æ–∑–¥–∞–ª–∏ –∑–∞–ø—É—Ç–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∞ –∑–∞—Ç–µ–º —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ `probs` –≤—ã—á–∏—Å–ª–∏–ª–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π $|00\rangle$, $|01\rangle$, $|10\rangle$, $|11\rangle$.

## –û–ø–µ—Ä–∞—Ç–æ—Ä—ã

–í –∫–≤–∞–Ω—Ç–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã X, Y, Z, S, T (`qml.PauliX`, `qml.PauliY`, `qml.PauliZ`, `qml.S`, `qml.T` —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ), –∞ —Ç–∞–∫–∂–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å —É–≥–æ–ª –≤—Ä–∞—â–µ–Ω–∏—è –≤–æ–∫—Ä—É–≥ –æ–¥–Ω–æ–π –∏–∑ –æ—Å–µ–π –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö: `qml.RX`, `qml.RY`, `qml.RZ`. –ó–¥–µ—Å—å –∏ –¥–∞–ª–µ–µ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `qml` –∫–∞–∫ –ø—Å–µ–≤–¥–æ–Ω–∏–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `PennyLane`.

–í —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º—ã –≤—Ä–∞—â–∞–µ–º –∫—É–±–∏—Ç –ø–æ–¥ –∏–Ω–¥–µ–∫—Å–æ–º 0 –≤–æ–∫—Ä—É–≥ –æ—Å–∏ X –Ω–∞ 90 –≥—Ä–∞–¥—É—Å–æ–≤ –∏–∑ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è $|0\rangle$ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º **–æ–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ** `qml.PauliZ` –¥–ª—è —ç—Ç–æ–≥–æ –∫—É–±–∏—Ç–∞ —Å –ø–æ–º–æ—â—å—é `qml.expval`. –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π $|0\rangle$ –∏ $|1\rangle$ —Ä–∞–≤–Ω—ã, —Ç–∞–∫ —á—Ç–æ –º—ã –ø–æ–ª—É—á–∞–µ–º –æ–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –±–ª–∏–∑–∫–æ–µ –∫ –Ω—É–ª—é, —á—Ç–æ –ª–µ–≥–∫–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:

$$0.5 \cdot 1 + 0.5 \cdot (-1) = 0$$

```{code-cell} ipython3
@qml.qnode(dev)
def circuit(x):
    qml.RX(x, wires=0)
    return qml.expval(qml.PauliZ(0))

circuit(np.pi/2)

–í —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –≤—Ä–∞—â–∞–µ–º –∫—É–±–∏—Ç –Ω–∞ —Ç–æ—Ç –∂–µ —É–≥–æ–ª 90 –≥—Ä–∞–¥—É—Å–æ–≤, –Ω–æ —É–∂–µ –≤–æ–∫—Ä—É–≥ –æ—Å–∏ Y. –û–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç —Ä–∞–∑ –∏—â–µ–º –¥–ª—è `qml.PauliX` –∏ –ø–æ–ª—É—á–∞–µ–º 1, —á—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º:

$$1 \cdot 1 + 0 \cdot (-1) = 1$$

```{code-cell} ipython3
@qml.qnode(dev)
def circuit(x):
    qml.RY(x, wires=0)
    return qml.expval(qml.PauliX(0))

circuit(np.pi/2)
------------------

[0;36m  File [0;32m"/tmp/ipykernel_6248/3212710088.py"[0;36m, line [0;32m12[0m
[0;31m    –†–∞–±–æ—Ç–∞—è —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π PennyLane –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å `NumPy`, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º —Ç–∞–∫–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç <a href="https://github.com/HIPS/autograd">autograd</a>.[0m
[0m            ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid syntax

SyntaxError: invalid syntax (3212710088.py, line 12)

